apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def superpowered_sdk_path = properties.getProperty('superpowered.dir')
def superpowered_license_key = properties.getProperty('superpowered.licenseKey')


android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PLATFORM=android-21",
                        "-DPATH_TO_SUPERPOWERED:STRING=${superpowered_sdk_path}",
                        "-DSUPERPOWERED_LICENSE_KEY:STRING=${superpowered_license_key}",
                        "-DANDROID_TOOLCHAIN=clang", "-DANDROID_ARM_NEON=TRUE", "-DANDROID_STL=c++_static"

                cFlags "-O3", "-fsigned-char"  // full optimization, char data type is signed
                cppFlags "-std=c++14", "-fsigned-char", "-I${superpowered_sdk_path}"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles fileTree('../proguard').asList().toArray()
        }
    }
}

dependencies {
    implementation libraries.kotlin

    testImplementation libraries.junit
}